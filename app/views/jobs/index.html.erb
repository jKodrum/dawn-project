<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>

<div class="row">
  <div class="col-md-7">
    <h1><strong> 黎明志工銀行 </strong></h1>
  </div>
  <div class="col-md-5">
    <br />
    <%= bootstrap_form_tag url: distance_jobs_path, method: :get do |f| %>
      <%= f.text_field :location, hide_label: true, 
        placeholder: '輸入地點透過距離排序（例如"台北大安區"）',
        value: params[:location], icon: "road" %>
    <% end %>
  </div>
</div>
<%= flash_tag %>

<div class="row">
  <!-- Map -->
  <div class="col-md-7">
    <div id="map" style='width: 100%; height: 500px;'></div>
  </div><!-- /col -->

  <div class="col-md-5">
    <!-- Pager -->
    Show: (<%= @per_page %>) 
    <% for per_page in [5, 10, 20, 30, 50] %>
      | <%= link_to per_page, jobs_path(per_page: per_page, location: params[:location], target: params[:target])%>
    <% end %><br />
    <%= will_paginate @jobs, style: "align-text: center;" %>
    <!-- Job Table -->
    <table class="table table-striped table-hover table-condense"> 
      <thead> 
        <tr class="info"> 
          <td> 最新更新 </td>
          <td> 志工服務 </td>
          <td> 地點 </td>
        </tr>
      </thead>
      <tbody> 
      <%= render partial: 'job_list', collection: @jobs, as: :job %>
      </tbody>
    </table>
  </div><!-- /col -->
</div><!-- /row -->




<script type="text/javascript">

// Build handler
handler = Gmaps.build('Google', {markers: {clusterer: {} } });
var mapStyle = 
//[{"featureType":"water","stylers":[{"color":"#021019"}]},{"featureType":"landscape","stylers":[{"color":"#08304b"}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#0c4152"},{"lightness":5}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#000000"}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"color":"#0b434f"},{"lightness":25}]},{"featureType":"road.arterial","elementType":"geometry.fill","stylers":[{"color":"#000000"}]},{"featureType":"road.arterial","elementType":"geometry.stroke","stylers":[{"color":"#0b3d51"},{"lightness":16}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#000000"}]},{"elementType":"labels.text.fill","stylers":[{"color":"#ffffff"}]},{"elementType":"labels.text.stroke","stylers":[{"color":"#000000"},{"lightness":13}]},{"featureType":"transit","stylers":[{"color":"#146474"}]},{"featureType":"administrative","elementType":"geometry.fill","stylers":[{"color":"#000000"}]},{"featureType":"administrative","elementType":"geometry.stroke","stylers":[{"color":"#144b53"},{"lightness":14},{"weight":1.4}]}];
[];
// Set options and onMapLoad function to build map
mapOptions = { internal: {id: 'map'},
               provider: { styles: mapStyle }
             };
mapFunc = function(){
  var job_hash = <%= raw @hash.to_json %>;
  markers = handler.addMarkers(job_hash);
  _.each(job_hash, function(json, index){
    json.marker = markers[index];
  });
  // click job <tr> will focus to the corresponding marker
  bindJobToMarker(job_hash);

  handler.bounds.extendWith(markers);
  handler.fitMapToBounds();
}
// Build the map
handler.buildMap( mapOptions, mapFunc );

function bindJobToMarker(json_array){
  _.each(json_array, function(json){
    $("#" + json.id).click(function(){ focus(json.marker); });
  });
};
function focus(marker){
  marker.setMap(handler.getMap()); //because clusterer removes map property from marker
  marker.panTo();
  google.maps.event.trigger(marker.getServiceObject(), 'click');
}

</script>
